name: CI/CD for React + Flask with Docker Compose

on:
  push:
    branches:
      - main  # Run this workflow when code is pushed to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_KEY }}

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      # Step 3: Build and push Docker images using Docker Compose
      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      # Step 4: SSH into EC2 and deploy the app using Docker Compose
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /path/to/your/app  # Navigate to your app directory on the EC2 instance
            docker-compose pull   # Pull the latest images from Docker Hub
            docker-compose down   # Stop and remove old containers
            docker-compose up -d  # Start the updated containers in detached mode
